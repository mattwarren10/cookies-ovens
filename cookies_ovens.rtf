{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Medium;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red184\green14\blue61;
\red247\green238\blue241;\red14\green115\blue192;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid501\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}}
\margl1440\margr1440\vieww18300\viewh12140\viewkind0
\deftab720
\pard\pardeftab720\sl400\sa200

\f0\b\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 I <3 Cookies
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  is a bakery that makes delicious cookies. They are growing rapidly, and they need some software to help them manage their kitchen.\
Your job is to build a program that will help them manage their cookie baking. Here are a few user stories to help get you started:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 As a baker, I want to make different types of cookies (peanut butter, chocolate chip, etc.).\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 As a baker, I want to place batches of cookies in an oven.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 As a baker, I want to know when a batch of cookies is ready to be removed from the oven.\cb1 \
\pard\pardeftab720\sl400\sa200
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The point of this challenge is to exercise your object-oriented design muscles. Are you up for it?\
\pard\pardeftab720\sl800\sa200

\f1\fs60 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Learning Goals\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls2\ilvl0
\f0\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Creating well-defined classes with a single responsibility\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Implementing clean and flexible interfaces between objects\cb1 \
\ls2\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Using composition to give structure to more complex objects\cb1 \
\pard\pardeftab720\sl800\sa200

\f1\fs60 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Objectives\
\pard\pardeftab720\sl600\sa200

\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Design the structure\
\pard\pardeftab720\sl400\sa200

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Think about this problem critically before you even begin to write code and describe how you would design the program in plain English.\
At the very least, consider these questions in your answer:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What are essential classes?\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What attributes will each class have?\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What interface will each class provide?\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 How will the classes interact with each other?\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Which classes will inherit from others, if any?\cb1 \
\pard\pardeftab720\sl600\sa200

\f1\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Step 1: MVP\
\pard\pardeftab720\sl400\sa200

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Implement a minimum viable product.\
It does not need to track multiple types of cookies, but you should be able to move cookies into and out of an oven.\
\pard\pardeftab720\sl600\sa200

\f1\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Step 2: Additional Features\
\pard\pardeftab720\sl400\sa200

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Add more features to your program.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls4\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Multiple types of cookies, each with a different baking time\cb1 \
\ls4\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Status attribute for cookies, with at least these possible values: 
\f2\fs22 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 :doughy
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 , 
\f2\fs22 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 :almost_ready
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 , 
\f2\fs22 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 :ready
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 , 
\f2\fs22 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 :burned
\f0\fs28 \cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\sl600\sa200

\f1\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Step 3: Refactor\
\pard\pardeftab720\sl400\sa200

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Take a step back and look at the code you've produced. Run through a checklist to see if you are following the principles of object-oriented design:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls5\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Is it DRY?\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Do your classes follow the {\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Law_of_Demeter"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Law of Demeter}}?\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Are your classes {\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/a/1527430"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 orthogonal}}?\cb1 \
\ls5\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\'95	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Do you expose only the minimum amount of surface area for each object?\cb1 \
\pard\pardeftab720\sl360\sa360

\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400\sa200

\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The Law of Demeter can be summarized as follows:\
\pard\pardeftab720\sl400\sa200

\i \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 For all classes C. and for all methods M attached to C, all objects to which M sends a message must be instances of classes associated with the following classes:
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400
\ls6\ilvl0
\i \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The argument classes of M (including C).
\i0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\ls6\ilvl0
\i \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The instance variable classes of C.
\i0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400\sa200

\i \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 (Objects created by M, or by functions or methods which M calls, and objects in global variables are considered as arguments of M.)
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
Read {\field{\*\fldinst{HYPERLINK "http://devblog.avdi.org/2011/07/05/demeter-its-not-just-a-good-idea-its-the-law/"}}{\fldrslt \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Avdi Grimm's post}} for a more thorough explanation.\
\pard\pardeftab720\sl600\sa200

\f1\fs48 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Get Creative!\
\pard\pardeftab720\sl400\sa200

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Put yourself in the baker's shoes, and imagine what other features you might like to have. Then pick the most useful and feasible one and build it out.\
}